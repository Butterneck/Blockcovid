version: "3.7"

services:
  # Grafana
  grafana:
    image: grafana/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - 3000:3000
    volumes:
      - ../grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ../grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ../grafana/dashboards:/dashboards
      - grafana-volume:/var/lib/grafana
    networks:
      - monitoring_network

  prometheus:
    image: prom/prometheus
    command:
      - "--web.enable-lifecycle"
      - "--config.file=/etc/prometheus/prometheus.yaml"
    volumes:
      - ../prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus-volume:/prometheus
    ports:
      - 9090:9090
    networks:
      - main_network
      - monitoring_network

  # loki:
  #   image: grafana/loki:2.1.0
  #   command: -config.file=/etc/loki/local-config.yaml --log.level=debug
  #   volumes:
  #     - ../loki/loki.yaml:/etc/loki/local-config.yaml
  #   ports:
  #     - 3100:3100
  #   networks:
  #     - main_network
  #     - monitoring_network
  #   depends_on:
  #     loki-persistence:
  #       condition: service_healthy

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    ports:
      - 8081:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    networks: 
      - main_network

  # loki-persistence:
  #   image: minio/minio
  #   entrypoint: /bin/sh -c "mkdir -p /data/loki && /usr/bin/docker-entrypoint.sh server /data"
  #   environment:
  #     MINIO_ACCESS_KEY: minio-access-key
  #     MINIO_SECRET_KEY: minio-secret-key
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
  #     interval: 30s
  #     timeout: 20s
  #     retries: 3
  #   ports:
  #     - "9002:9000"
  #   volumes:
  #     - loki-volume:/data/
  #     - ../loki/docker-entrypoint.sh:/docker-entrypoint.sh
  #   networks:
  #     - monitoring_network

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/host_hostname:ro
    environment:
      - HOST_HOSTNAME=/etc/host_hostname
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - monitoring_network


      
  

networks:
  monitoring_network:
    name: monitoring_network
  main_network:
    name: main_network
    external: true

volumes:
  prometheus-volume:
    driver: local
  grafana-volume:
    driver: local
  loki-volume:
    driver: local
